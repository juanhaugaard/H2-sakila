/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * Film Category cross-reference table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "FILM_CATEGORY",
    schema = "PUBLIC"
)
public class FilmCategory implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long filmId;
    private Long categoryId;
    private OffsetDateTime lastUpdate;

    public FilmCategory() {}

    public FilmCategory(FilmCategory value) {
        this.filmId = value.filmId;
        this.categoryId = value.categoryId;
        this.lastUpdate = value.lastUpdate;
    }

    public FilmCategory(
        Long filmId,
        Long categoryId,
        OffsetDateTime lastUpdate
    ) {
        this.filmId = filmId;
        this.categoryId = categoryId;
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>PUBLIC.FILM_CATEGORY.FILM_ID</code>.
     */
    @Column(name = "FILM_ID", nullable = false)
    @NotNull
    public Long getFilmId() {
        return this.filmId;
    }

    /**
     * Setter for <code>PUBLIC.FILM_CATEGORY.FILM_ID</code>.
     */
    public void setFilmId(Long filmId) {
        this.filmId = filmId;
    }

    /**
     * Getter for <code>PUBLIC.FILM_CATEGORY.CATEGORY_ID</code>.
     */
    @Column(name = "CATEGORY_ID", nullable = false)
    @NotNull
    public Long getCategoryId() {
        return this.categoryId;
    }

    /**
     * Setter for <code>PUBLIC.FILM_CATEGORY.CATEGORY_ID</code>.
     */
    public void setCategoryId(Long categoryId) {
        this.categoryId = categoryId;
    }

    /**
     * Getter for <code>PUBLIC.FILM_CATEGORY.LAST_UPDATE</code>.
     */
    @Column(name = "LAST_UPDATE", nullable = false, precision = 6)
    public OffsetDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>PUBLIC.FILM_CATEGORY.LAST_UPDATE</code>.
     */
    public void setLastUpdate(OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final FilmCategory other = (FilmCategory) obj;
        if (this.filmId == null) {
            if (other.filmId != null)
                return false;
        }
        else if (!this.filmId.equals(other.filmId))
            return false;
        if (this.categoryId == null) {
            if (other.categoryId != null)
                return false;
        }
        else if (!this.categoryId.equals(other.categoryId))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.filmId == null) ? 0 : this.filmId.hashCode());
        result = prime * result + ((this.categoryId == null) ? 0 : this.categoryId.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("FilmCategory (");

        sb.append(filmId);
        sb.append(", ").append(categoryId);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }
}
