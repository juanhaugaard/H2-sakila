/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * Actor details table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "ACTOR",
    schema = "PUBLIC",
    indexes = {
        @Index(name = "IDX_FIRST_AND_LAST_NAME", unique = true, columnList = "FIRST_NAME ASC, LAST_NAME ASC")
    }
)
public class Actor implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long actorId;
    private String firstName;
    private String lastName;
    private OffsetDateTime lastUpdate;

    public Actor() {}

    public Actor(Actor value) {
        this.actorId = value.actorId;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.lastUpdate = value.lastUpdate;
    }

    public Actor(
        Long actorId,
        String firstName,
        String lastName,
        OffsetDateTime lastUpdate
    ) {
        this.actorId = actorId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>PUBLIC.ACTOR.ACTOR_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "ACTOR_ID", nullable = false)
    public Long getActorId() {
        return this.actorId;
    }

    /**
     * Setter for <code>PUBLIC.ACTOR.ACTOR_ID</code>.
     */
    public void setActorId(Long actorId) {
        this.actorId = actorId;
    }

    /**
     * Getter for <code>PUBLIC.ACTOR.FIRST_NAME</code>.
     */
    @Column(name = "FIRST_NAME", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>PUBLIC.ACTOR.FIRST_NAME</code>.
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for <code>PUBLIC.ACTOR.LAST_NAME</code>.
     */
    @Column(name = "LAST_NAME", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Setter for <code>PUBLIC.ACTOR.LAST_NAME</code>.
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for <code>PUBLIC.ACTOR.LAST_UPDATE</code>.
     */
    @Column(name = "LAST_UPDATE", nullable = false, precision = 6)
    public OffsetDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>PUBLIC.ACTOR.LAST_UPDATE</code>.
     */
    public void setLastUpdate(OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Actor other = (Actor) obj;
        if (this.actorId == null) {
            if (other.actorId != null)
                return false;
        }
        else if (!this.actorId.equals(other.actorId))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.actorId == null) ? 0 : this.actorId.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Actor (");

        sb.append(actorId);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }
}
