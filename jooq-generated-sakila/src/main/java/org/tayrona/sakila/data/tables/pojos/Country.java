/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import javax.annotation.Nullable;
import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * Country details table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "COUNTRY",
    schema = "PUBLIC"
)
public class Country implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long countryId;
    private String country;
    private String countryAbbreviation;
    private OffsetDateTime lastUpdate;

    public Country() {}

    public Country(Country value) {
        this.countryId = value.countryId;
        this.country = value.country;
        this.countryAbbreviation = value.countryAbbreviation;
        this.lastUpdate = value.lastUpdate;
    }

    public Country(
        Long countryId,
        String country,
        @Nullable String countryAbbreviation,
        OffsetDateTime lastUpdate
    ) {
        this.countryId = countryId;
        this.country = country;
        this.countryAbbreviation = countryAbbreviation;
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>PUBLIC.COUNTRY.COUNTRY_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "COUNTRY_ID", nullable = false)
    public Long getCountryId() {
        return this.countryId;
    }

    /**
     * Setter for <code>PUBLIC.COUNTRY.COUNTRY_ID</code>.
     */
    public void setCountryId(Long countryId) {
        this.countryId = countryId;
    }

    /**
     * Getter for <code>PUBLIC.COUNTRY.COUNTRY</code>.
     */
    @Column(name = "COUNTRY", nullable = false, length = 50)
    @NotNull
    @Size(max = 50)
    public String getCountry() {
        return this.country;
    }

    /**
     * Setter for <code>PUBLIC.COUNTRY.COUNTRY</code>.
     */
    public void setCountry(String country) {
        this.country = country;
    }

    /**
     * Getter for <code>PUBLIC.COUNTRY.COUNTRY_ABBREVIATION</code>.
     */
    @Column(name = "COUNTRY_ABBREVIATION", length = 5)
    @Size(max = 5)
    @Nullable
    public String getCountryAbbreviation() {
        return this.countryAbbreviation;
    }

    /**
     * Setter for <code>PUBLIC.COUNTRY.COUNTRY_ABBREVIATION</code>.
     */
    public void setCountryAbbreviation(@Nullable String countryAbbreviation) {
        this.countryAbbreviation = countryAbbreviation;
    }

    /**
     * Getter for <code>PUBLIC.COUNTRY.LAST_UPDATE</code>.
     */
    @Column(name = "LAST_UPDATE", nullable = false, precision = 6)
    public OffsetDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>PUBLIC.COUNTRY.LAST_UPDATE</code>.
     */
    public void setLastUpdate(OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Country other = (Country) obj;
        if (this.countryId == null) {
            if (other.countryId != null)
                return false;
        }
        else if (!this.countryId.equals(other.countryId))
            return false;
        if (this.country == null) {
            if (other.country != null)
                return false;
        }
        else if (!this.country.equals(other.country))
            return false;
        if (this.countryAbbreviation == null) {
            if (other.countryAbbreviation != null)
                return false;
        }
        else if (!this.countryAbbreviation.equals(other.countryAbbreviation))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.countryId == null) ? 0 : this.countryId.hashCode());
        result = prime * result + ((this.country == null) ? 0 : this.country.hashCode());
        result = prime * result + ((this.countryAbbreviation == null) ? 0 : this.countryAbbreviation.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Country (");

        sb.append(countryId);
        sb.append(", ").append(country);
        sb.append(", ").append(countryAbbreviation);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }
}
