/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data;


import org.jooq.Configuration;
import org.jooq.Field;
import org.tayrona.sakila.data.routines.EnumToOrdinal;
import org.tayrona.sakila.data.routines.MpaaRatingToOrdinal;
import org.tayrona.sakila.data.routines.Reverse;
import org.tayrona.sakila.data.routines.SpecialFeaturesToOrdinal;
import org.tayrona.sakila.data.routines._GroupConcat;


/**
 * Convenience access to all stored procedures and functions in PUBLIC.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Routines {

    /**
     * Call <code>PUBLIC._GROUP_CONCAT</code>
     */
    public static String _GroupConcat(
          Configuration configuration
        , String p1
        , String p2
    ) {
        _GroupConcat f = new _GroupConcat();
        f.setP1(p1);
        f.setP2(p2);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>PUBLIC._GROUP_CONCAT</code> as a field.
     */
    public static Field<String> _GroupConcat(
          String p1
        , String p2
    ) {
        _GroupConcat f = new _GroupConcat();
        f.setP1(p1);
        f.setP2(p2);

        return f.asField();
    }

    /**
     * Get <code>PUBLIC._GROUP_CONCAT</code> as a field.
     */
    public static Field<String> _GroupConcat(
          Field<String> p1
        , Field<String> p2
    ) {
        _GroupConcat f = new _GroupConcat();
        f.setP1(p1);
        f.setP2(p2);

        return f.asField();
    }

    /**
     * Call <code>PUBLIC.ENUM_TO_ORDINAL</code>
     */
    public static Integer enumToOrdinal(
          Configuration configuration
        , String p1
        , String p2
        , String p3
        , String p4
    ) {
        EnumToOrdinal f = new EnumToOrdinal();
        f.setP1(p1);
        f.setP2(p2);
        f.setP3(p3);
        f.setP4(p4);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>PUBLIC.ENUM_TO_ORDINAL</code> as a field.
     */
    public static Field<Integer> enumToOrdinal(
          String p1
        , String p2
        , String p3
        , String p4
    ) {
        EnumToOrdinal f = new EnumToOrdinal();
        f.setP1(p1);
        f.setP2(p2);
        f.setP3(p3);
        f.setP4(p4);

        return f.asField();
    }

    /**
     * Get <code>PUBLIC.ENUM_TO_ORDINAL</code> as a field.
     */
    public static Field<Integer> enumToOrdinal(
          Field<String> p1
        , Field<String> p2
        , Field<String> p3
        , Field<String> p4
    ) {
        EnumToOrdinal f = new EnumToOrdinal();
        f.setP1(p1);
        f.setP2(p2);
        f.setP3(p3);
        f.setP4(p4);

        return f.asField();
    }

    /**
     * Call <code>PUBLIC.MPAA_RATING_TO_ORDINAL</code>
     */
    public static Integer mpaaRatingToOrdinal(
          Configuration configuration
        , String p1
    ) {
        MpaaRatingToOrdinal f = new MpaaRatingToOrdinal();
        f.setP1(p1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>PUBLIC.MPAA_RATING_TO_ORDINAL</code> as a field.
     */
    public static Field<Integer> mpaaRatingToOrdinal(
          String p1
    ) {
        MpaaRatingToOrdinal f = new MpaaRatingToOrdinal();
        f.setP1(p1);

        return f.asField();
    }

    /**
     * Get <code>PUBLIC.MPAA_RATING_TO_ORDINAL</code> as a field.
     */
    public static Field<Integer> mpaaRatingToOrdinal(
          Field<String> p1
    ) {
        MpaaRatingToOrdinal f = new MpaaRatingToOrdinal();
        f.setP1(p1);

        return f.asField();
    }

    /**
     * Call <code>PUBLIC.REVERSE</code>
     */
    public static String reverse(
          Configuration configuration
        , String p1
    ) {
        Reverse f = new Reverse();
        f.setP1(p1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>PUBLIC.REVERSE</code> as a field.
     */
    public static Field<String> reverse(
          String p1
    ) {
        Reverse f = new Reverse();
        f.setP1(p1);

        return f.asField();
    }

    /**
     * Get <code>PUBLIC.REVERSE</code> as a field.
     */
    public static Field<String> reverse(
          Field<String> p1
    ) {
        Reverse f = new Reverse();
        f.setP1(p1);

        return f.asField();
    }

    /**
     * Call <code>PUBLIC.SPECIAL_FEATURES_TO_ORDINAL</code>
     */
    public static Integer specialFeaturesToOrdinal(
          Configuration configuration
        , String p1
    ) {
        SpecialFeaturesToOrdinal f = new SpecialFeaturesToOrdinal();
        f.setP1(p1);

        f.execute(configuration);
        return f.getReturnValue();
    }

    /**
     * Get <code>PUBLIC.SPECIAL_FEATURES_TO_ORDINAL</code> as a field.
     */
    public static Field<Integer> specialFeaturesToOrdinal(
          String p1
    ) {
        SpecialFeaturesToOrdinal f = new SpecialFeaturesToOrdinal();
        f.setP1(p1);

        return f.asField();
    }

    /**
     * Get <code>PUBLIC.SPECIAL_FEATURES_TO_ORDINAL</code> as a field.
     */
    public static Field<Integer> specialFeaturesToOrdinal(
          Field<String> p1
    ) {
        SpecialFeaturesToOrdinal f = new SpecialFeaturesToOrdinal();
        f.setP1(p1);

        return f.asField();
    }
}
