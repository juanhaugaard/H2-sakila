/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;
import org.tayrona.sakila.data.enums.MpaaRating;

import javax.annotation.Nullable;
import java.io.Serializable;
import java.math.BigDecimal;
import java.time.OffsetDateTime;


/**
 * Film details table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "FILM",
    schema = "PUBLIC",
    indexes = {
        @Index(name = "IDX_BARCODE", unique = true, columnList = "BARCODE ASC"),
        @Index(name = "IDX_REVERSE_BARCODE", unique = true, columnList = "REVERSE_BARCODE ASC"),
        @Index(name = "IDX_TITLE", unique = true, columnList = "TITLE ASC")
    }
)
public class Film implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long filmId;
    private String title;
    private String description;
    private Short releaseYear;
    private Long languageId;
    private Long originalLanguageId;
    private Byte rentalDuration;
    private BigDecimal rentalRate;
    private Short length;
    private BigDecimal replacementCost;
    private String barcode;
    private String reverseBarcode;
    private MpaaRating rating;
    private OffsetDateTime lastUpdate;

    public Film() {}

    public Film(Film value) {
        this.filmId = value.filmId;
        this.title = value.title;
        this.description = value.description;
        this.releaseYear = value.releaseYear;
        this.languageId = value.languageId;
        this.originalLanguageId = value.originalLanguageId;
        this.rentalDuration = value.rentalDuration;
        this.rentalRate = value.rentalRate;
        this.length = value.length;
        this.replacementCost = value.replacementCost;
        this.barcode = value.barcode;
        this.reverseBarcode = value.reverseBarcode;
        this.rating = value.rating;
        this.lastUpdate = value.lastUpdate;
    }

    public Film(
        Long filmId,
        String title,
        @Nullable String description,
        @Nullable Short releaseYear,
        Long languageId,
        @Nullable Long originalLanguageId,
        Byte rentalDuration,
        BigDecimal rentalRate,
        @Nullable Short length,
        BigDecimal replacementCost,
        @Nullable String barcode,
        @Nullable String reverseBarcode,
        @Nullable MpaaRating rating,
        OffsetDateTime lastUpdate
    ) {
        this.filmId = filmId;
        this.title = title;
        this.description = description;
        this.releaseYear = releaseYear;
        this.languageId = languageId;
        this.originalLanguageId = originalLanguageId;
        this.rentalDuration = rentalDuration;
        this.rentalRate = rentalRate;
        this.length = length;
        this.replacementCost = replacementCost;
        this.barcode = barcode;
        this.reverseBarcode = reverseBarcode;
        this.rating = rating;
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>PUBLIC.FILM.FILM_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "FILM_ID", nullable = false)
    public Long getFilmId() {
        return this.filmId;
    }

    /**
     * Setter for <code>PUBLIC.FILM.FILM_ID</code>.
     */
    public void setFilmId(Long filmId) {
        this.filmId = filmId;
    }

    /**
     * Getter for <code>PUBLIC.FILM.TITLE</code>.
     */
    @Column(name = "TITLE", nullable = false, length = 255)
    @NotNull
    @Size(max = 255)
    public String getTitle() {
        return this.title;
    }

    /**
     * Setter for <code>PUBLIC.FILM.TITLE</code>.
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Getter for <code>PUBLIC.FILM.DESCRIPTION</code>.
     */
    @Column(name = "DESCRIPTION", length = 1000000000)
    @Size(max = 1000000000)
    @Nullable
    public String getDescription() {
        return this.description;
    }

    /**
     * Setter for <code>PUBLIC.FILM.DESCRIPTION</code>.
     */
    public void setDescription(@Nullable String description) {
        this.description = description;
    }

    /**
     * Getter for <code>PUBLIC.FILM.RELEASE_YEAR</code>. YearValue a small int
     * between 1900 and 2155
     */
    @Column(name = "RELEASE_YEAR")
    @Nullable
    public Short getReleaseYear() {
        return this.releaseYear;
    }

    /**
     * Setter for <code>PUBLIC.FILM.RELEASE_YEAR</code>. YearValue a small int
     * between 1900 and 2155
     */
    public void setReleaseYear(@Nullable Short releaseYear) {
        this.releaseYear = releaseYear;
    }

    /**
     * Getter for <code>PUBLIC.FILM.LANGUAGE_ID</code>.
     */
    @Column(name = "LANGUAGE_ID", nullable = false)
    @NotNull
    public Long getLanguageId() {
        return this.languageId;
    }

    /**
     * Setter for <code>PUBLIC.FILM.LANGUAGE_ID</code>.
     */
    public void setLanguageId(Long languageId) {
        this.languageId = languageId;
    }

    /**
     * Getter for <code>PUBLIC.FILM.ORIGINAL_LANGUAGE_ID</code>.
     */
    @Column(name = "ORIGINAL_LANGUAGE_ID")
    @Nullable
    public Long getOriginalLanguageId() {
        return this.originalLanguageId;
    }

    /**
     * Setter for <code>PUBLIC.FILM.ORIGINAL_LANGUAGE_ID</code>.
     */
    public void setOriginalLanguageId(@Nullable Long originalLanguageId) {
        this.originalLanguageId = originalLanguageId;
    }

    /**
     * Getter for <code>PUBLIC.FILM.RENTAL_DURATION</code>.
     */
    @Column(name = "RENTAL_DURATION", nullable = false)
    public Byte getRentalDuration() {
        return this.rentalDuration;
    }

    /**
     * Setter for <code>PUBLIC.FILM.RENTAL_DURATION</code>.
     */
    public void setRentalDuration(Byte rentalDuration) {
        this.rentalDuration = rentalDuration;
    }

    /**
     * Getter for <code>PUBLIC.FILM.RENTAL_RATE</code>.
     */
    @Column(name = "RENTAL_RATE", nullable = false, precision = 4, scale = 2)
    public BigDecimal getRentalRate() {
        return this.rentalRate;
    }

    /**
     * Setter for <code>PUBLIC.FILM.RENTAL_RATE</code>.
     */
    public void setRentalRate(BigDecimal rentalRate) {
        this.rentalRate = rentalRate;
    }

    /**
     * Getter for <code>PUBLIC.FILM.LENGTH</code>.
     */
    @Column(name = "LENGTH")
    @Nullable
    public Short getLength() {
        return this.length;
    }

    /**
     * Setter for <code>PUBLIC.FILM.LENGTH</code>.
     */
    public void setLength(@Nullable Short length) {
        this.length = length;
    }

    /**
     * Getter for <code>PUBLIC.FILM.REPLACEMENT_COST</code>.
     */
    @Column(name = "REPLACEMENT_COST", nullable = false, precision = 5, scale = 2)
    public BigDecimal getReplacementCost() {
        return this.replacementCost;
    }

    /**
     * Setter for <code>PUBLIC.FILM.REPLACEMENT_COST</code>.
     */
    public void setReplacementCost(BigDecimal replacementCost) {
        this.replacementCost = replacementCost;
    }

    /**
     * Getter for <code>PUBLIC.FILM.BARCODE</code>. UPC is barcode of length 12
     * characters
     */
    @Column(name = "BARCODE", length = 12)
    @Size(max = 12)
    @Nullable
    public String getBarcode() {
        return this.barcode;
    }

    /**
     * Setter for <code>PUBLIC.FILM.BARCODE</code>. UPC is barcode of length 12
     * characters
     */
    public void setBarcode(@Nullable String barcode) {
        this.barcode = barcode;
    }

    /**
     * Getter for <code>PUBLIC.FILM.REVERSE_BARCODE</code>. UPC is barcode of
     * length 12 characters
     */
    @Column(name = "REVERSE_BARCODE", length = 12)
    @Size(max = 12)
    @Nullable
    public String getReverseBarcode() {
        return this.reverseBarcode;
    }

    /**
     * Setter for <code>PUBLIC.FILM.REVERSE_BARCODE</code>. UPC is barcode of
     * length 12 characters
     */
    public void setReverseBarcode(@Nullable String reverseBarcode) {
        this.reverseBarcode = reverseBarcode;
    }

    /**
     * Getter for <code>PUBLIC.FILM.RATING</code>. MPAA Rating ENUM
     * (G,PG,PG-13,R,NC-17)
     */
    @Column(name = "RATING")
    @Nullable
    public MpaaRating getRating() {
        return this.rating;
    }

    /**
     * Setter for <code>PUBLIC.FILM.RATING</code>. MPAA Rating ENUM
     * (G,PG,PG-13,R,NC-17)
     */
    public void setRating(@Nullable MpaaRating rating) {
        this.rating = rating;
    }

    /**
     * Getter for <code>PUBLIC.FILM.LAST_UPDATE</code>.
     */
    @Column(name = "LAST_UPDATE", nullable = false, precision = 6)
    public OffsetDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>PUBLIC.FILM.LAST_UPDATE</code>.
     */
    public void setLastUpdate(OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Film other = (Film) obj;
        if (this.filmId == null) {
            if (other.filmId != null)
                return false;
        }
        else if (!this.filmId.equals(other.filmId))
            return false;
        if (this.title == null) {
            if (other.title != null)
                return false;
        }
        else if (!this.title.equals(other.title))
            return false;
        if (this.description == null) {
            if (other.description != null)
                return false;
        }
        else if (!this.description.equals(other.description))
            return false;
        if (this.releaseYear == null) {
            if (other.releaseYear != null)
                return false;
        }
        else if (!this.releaseYear.equals(other.releaseYear))
            return false;
        if (this.languageId == null) {
            if (other.languageId != null)
                return false;
        }
        else if (!this.languageId.equals(other.languageId))
            return false;
        if (this.originalLanguageId == null) {
            if (other.originalLanguageId != null)
                return false;
        }
        else if (!this.originalLanguageId.equals(other.originalLanguageId))
            return false;
        if (this.rentalDuration == null) {
            if (other.rentalDuration != null)
                return false;
        }
        else if (!this.rentalDuration.equals(other.rentalDuration))
            return false;
        if (this.rentalRate == null) {
            if (other.rentalRate != null)
                return false;
        }
        else if (!this.rentalRate.equals(other.rentalRate))
            return false;
        if (this.length == null) {
            if (other.length != null)
                return false;
        }
        else if (!this.length.equals(other.length))
            return false;
        if (this.replacementCost == null) {
            if (other.replacementCost != null)
                return false;
        }
        else if (!this.replacementCost.equals(other.replacementCost))
            return false;
        if (this.barcode == null) {
            if (other.barcode != null)
                return false;
        }
        else if (!this.barcode.equals(other.barcode))
            return false;
        if (this.reverseBarcode == null) {
            if (other.reverseBarcode != null)
                return false;
        }
        else if (!this.reverseBarcode.equals(other.reverseBarcode))
            return false;
        if (this.rating == null) {
            if (other.rating != null)
                return false;
        }
        else if (!this.rating.equals(other.rating))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.filmId == null) ? 0 : this.filmId.hashCode());
        result = prime * result + ((this.title == null) ? 0 : this.title.hashCode());
        result = prime * result + ((this.description == null) ? 0 : this.description.hashCode());
        result = prime * result + ((this.releaseYear == null) ? 0 : this.releaseYear.hashCode());
        result = prime * result + ((this.languageId == null) ? 0 : this.languageId.hashCode());
        result = prime * result + ((this.originalLanguageId == null) ? 0 : this.originalLanguageId.hashCode());
        result = prime * result + ((this.rentalDuration == null) ? 0 : this.rentalDuration.hashCode());
        result = prime * result + ((this.rentalRate == null) ? 0 : this.rentalRate.hashCode());
        result = prime * result + ((this.length == null) ? 0 : this.length.hashCode());
        result = prime * result + ((this.replacementCost == null) ? 0 : this.replacementCost.hashCode());
        result = prime * result + ((this.barcode == null) ? 0 : this.barcode.hashCode());
        result = prime * result + ((this.reverseBarcode == null) ? 0 : this.reverseBarcode.hashCode());
        result = prime * result + ((this.rating == null) ? 0 : this.rating.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Film (");

        sb.append(filmId);
        sb.append(", ").append(title);
        sb.append(", ").append(description);
        sb.append(", ").append(releaseYear);
        sb.append(", ").append(languageId);
        sb.append(", ").append(originalLanguageId);
        sb.append(", ").append(rentalDuration);
        sb.append(", ").append(rentalRate);
        sb.append(", ").append(length);
        sb.append(", ").append(replacementCost);
        sb.append(", ").append(barcode);
        sb.append(", ").append(reverseBarcode);
        sb.append(", ").append(rating);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }
}
