/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data.tables.records;


import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record11;
import org.jooq.Row11;
import org.jooq.impl.UpdatableRecordImpl;
import org.tayrona.sakila.data.tables.Staff;


/**
 * Staff details table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> implements Record11<Long, String, String, Long, byte[], String, Long, Boolean, String, byte[], LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.STAFF.STAFF_ID</code>.
     */
    public void setStaffId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.STAFF_ID</code>.
     */
    public Long getStaffId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.FIRST_NAME</code>.
     */
    public void setFirstName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.FIRST_NAME</code>.
     */
    public String getFirstName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.LAST_NAME</code>.
     */
    public void setLastName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.LAST_NAME</code>.
     */
    public String getLastName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.ADDRESS_ID</code>.
     */
    public void setAddressId(Long value) {
        set(3, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.ADDRESS_ID</code>.
     */
    public Long getAddressId() {
        return (Long) get(3);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.PICTURE</code>.
     */
    public void setPicture(byte[] value) {
        set(4, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.PICTURE</code>.
     */
    public byte[] getPicture() {
        return (byte[]) get(4);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.EMAIL</code>.
     */
    public void setEmail(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.EMAIL</code>.
     */
    public String getEmail() {
        return (String) get(5);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.STORE_ID</code>.
     */
    public void setStoreId(Long value) {
        set(6, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.STORE_ID</code>.
     */
    public Long getStoreId() {
        return (Long) get(6);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.ACTIVE</code>.
     */
    public void setActive(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.ACTIVE</code>.
     */
    public Boolean getActive() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.USERNAME</code>.
     */
    public void setUsername(String value) {
        set(8, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.USERNAME</code>.
     */
    public String getUsername() {
        return (String) get(8);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.PASSWORD</code>.
     */
    public void setPassword(byte[] value) {
        set(9, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.PASSWORD</code>.
     */
    public byte[] getPassword() {
        return (byte[]) get(9);
    }

    /**
     * Setter for <code>PUBLIC.STAFF.LAST_UPDATE</code>.
     */
    public void setLastUpdate(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>PUBLIC.STAFF.LAST_UPDATE</code>.
     */
    public LocalDateTime getLastUpdate() {
        return (LocalDateTime) get(10);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record11 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row11<Long, String, String, Long, byte[], String, Long, Boolean, String, byte[], LocalDateTime> fieldsRow() {
        return (Row11) super.fieldsRow();
    }

    @Override
    public Row11<Long, String, String, Long, byte[], String, Long, Boolean, String, byte[], LocalDateTime> valuesRow() {
        return (Row11) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Staff.STAFF.STAFF_ID;
    }

    @Override
    public Field<String> field2() {
        return Staff.STAFF.FIRST_NAME;
    }

    @Override
    public Field<String> field3() {
        return Staff.STAFF.LAST_NAME;
    }

    @Override
    public Field<Long> field4() {
        return Staff.STAFF.ADDRESS_ID;
    }

    @Override
    public Field<byte[]> field5() {
        return Staff.STAFF.PICTURE;
    }

    @Override
    public Field<String> field6() {
        return Staff.STAFF.EMAIL;
    }

    @Override
    public Field<Long> field7() {
        return Staff.STAFF.STORE_ID;
    }

    @Override
    public Field<Boolean> field8() {
        return Staff.STAFF.ACTIVE;
    }

    @Override
    public Field<String> field9() {
        return Staff.STAFF.USERNAME;
    }

    @Override
    public Field<byte[]> field10() {
        return Staff.STAFF.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Staff.STAFF.LAST_UPDATE;
    }

    @Override
    public Long component1() {
        return getStaffId();
    }

    @Override
    public String component2() {
        return getFirstName();
    }

    @Override
    public String component3() {
        return getLastName();
    }

    @Override
    public Long component4() {
        return getAddressId();
    }

    @Override
    public byte[] component5() {
        return getPicture();
    }

    @Override
    public String component6() {
        return getEmail();
    }

    @Override
    public Long component7() {
        return getStoreId();
    }

    @Override
    public Boolean component8() {
        return getActive();
    }

    @Override
    public String component9() {
        return getUsername();
    }

    @Override
    public byte[] component10() {
        return getPassword();
    }

    @Override
    public LocalDateTime component11() {
        return getLastUpdate();
    }

    @Override
    public Long value1() {
        return getStaffId();
    }

    @Override
    public String value2() {
        return getFirstName();
    }

    @Override
    public String value3() {
        return getLastName();
    }

    @Override
    public Long value4() {
        return getAddressId();
    }

    @Override
    public byte[] value5() {
        return getPicture();
    }

    @Override
    public String value6() {
        return getEmail();
    }

    @Override
    public Long value7() {
        return getStoreId();
    }

    @Override
    public Boolean value8() {
        return getActive();
    }

    @Override
    public String value9() {
        return getUsername();
    }

    @Override
    public byte[] value10() {
        return getPassword();
    }

    @Override
    public LocalDateTime value11() {
        return getLastUpdate();
    }

    @Override
    public StaffRecord value1(Long value) {
        setStaffId(value);
        return this;
    }

    @Override
    public StaffRecord value2(String value) {
        setFirstName(value);
        return this;
    }

    @Override
    public StaffRecord value3(String value) {
        setLastName(value);
        return this;
    }

    @Override
    public StaffRecord value4(Long value) {
        setAddressId(value);
        return this;
    }

    @Override
    public StaffRecord value5(byte[] value) {
        setPicture(value);
        return this;
    }

    @Override
    public StaffRecord value6(String value) {
        setEmail(value);
        return this;
    }

    @Override
    public StaffRecord value7(Long value) {
        setStoreId(value);
        return this;
    }

    @Override
    public StaffRecord value8(Boolean value) {
        setActive(value);
        return this;
    }

    @Override
    public StaffRecord value9(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public StaffRecord value10(byte[] value) {
        setPassword(value);
        return this;
    }

    @Override
    public StaffRecord value11(LocalDateTime value) {
        setLastUpdate(value);
        return this;
    }

    @Override
    public StaffRecord values(Long value1, String value2, String value3, Long value4, byte[] value5, String value6, Long value7, Boolean value8, String value9, byte[] value10, LocalDateTime value11) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StaffRecord
     */
    public StaffRecord() {
        super(Staff.STAFF);
    }

    /**
     * Create a detached, initialised StaffRecord
     */
    public StaffRecord(Long staffId, String firstName, String lastName, Long addressId, byte[] picture, String email, Long storeId, Boolean active, String username, byte[] password, LocalDateTime lastUpdate) {
        super(Staff.STAFF);

        setStaffId(staffId);
        setFirstName(firstName);
        setLastName(lastName);
        setAddressId(addressId);
        setPicture(picture);
        setEmail(email);
        setStoreId(storeId);
        setActive(active);
        setUsername(username);
        setPassword(password);
        setLastUpdate(lastUpdate);
    }
}
