/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data.tables.pojos;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

import javax.annotation.Nullable;
import java.io.Serializable;
import java.time.OffsetDateTime;


/**
 * Customer details table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "CUSTOMER",
    schema = "PUBLIC",
    indexes = {
        @Index(name = "IDX_LAST_NAME", columnList = "LAST_NAME ASC")
    }
)
public class Customer implements Serializable {

    private static final long serialVersionUID = 1L;

    private Long customerId;
    private Long storeId;
    private String firstName;
    private String lastName;
    private String email;
    private Long addressId;
    private Boolean active;
    private OffsetDateTime createDate;
    private OffsetDateTime lastUpdate;

    public Customer() {}

    public Customer(Customer value) {
        this.customerId = value.customerId;
        this.storeId = value.storeId;
        this.firstName = value.firstName;
        this.lastName = value.lastName;
        this.email = value.email;
        this.addressId = value.addressId;
        this.active = value.active;
        this.createDate = value.createDate;
        this.lastUpdate = value.lastUpdate;
    }

    public Customer(
        Long customerId,
        Long storeId,
        String firstName,
        String lastName,
        @Nullable String email,
        Long addressId,
        Boolean active,
        OffsetDateTime createDate,
        OffsetDateTime lastUpdate
    ) {
        this.customerId = customerId;
        this.storeId = storeId;
        this.firstName = firstName;
        this.lastName = lastName;
        this.email = email;
        this.addressId = addressId;
        this.active = active;
        this.createDate = createDate;
        this.lastUpdate = lastUpdate;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.CUSTOMER_ID</code>.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "CUSTOMER_ID", nullable = false)
    public Long getCustomerId() {
        return this.customerId;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.CUSTOMER_ID</code>.
     */
    public void setCustomerId(Long customerId) {
        this.customerId = customerId;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.STORE_ID</code>.
     */
    @Column(name = "STORE_ID", nullable = false)
    @NotNull
    public Long getStoreId() {
        return this.storeId;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.STORE_ID</code>.
     */
    public void setStoreId(Long storeId) {
        this.storeId = storeId;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.FIRST_NAME</code>.
     */
    @Column(name = "FIRST_NAME", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getFirstName() {
        return this.firstName;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.FIRST_NAME</code>.
     */
    public void setFirstName(String firstName) {
        this.firstName = firstName;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.LAST_NAME</code>.
     */
    @Column(name = "LAST_NAME", nullable = false, length = 45)
    @NotNull
    @Size(max = 45)
    public String getLastName() {
        return this.lastName;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.LAST_NAME</code>.
     */
    public void setLastName(String lastName) {
        this.lastName = lastName;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.EMAIL</code>.
     */
    @Column(name = "EMAIL", length = 50)
    @Size(max = 50)
    @Nullable
    public String getEmail() {
        return this.email;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.EMAIL</code>.
     */
    public void setEmail(@Nullable String email) {
        this.email = email;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.ADDRESS_ID</code>.
     */
    @Column(name = "ADDRESS_ID", nullable = false)
    @NotNull
    public Long getAddressId() {
        return this.addressId;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.ADDRESS_ID</code>.
     */
    public void setAddressId(Long addressId) {
        this.addressId = addressId;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.ACTIVE</code>.
     */
    @Column(name = "ACTIVE", nullable = false)
    public Boolean getActive() {
        return this.active;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.ACTIVE</code>.
     */
    public void setActive(Boolean active) {
        this.active = active;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.CREATE_DATE</code>.
     */
    @Column(name = "CREATE_DATE", nullable = false, precision = 6)
    public OffsetDateTime getCreateDate() {
        return this.createDate;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.CREATE_DATE</code>.
     */
    public void setCreateDate(OffsetDateTime createDate) {
        this.createDate = createDate;
    }

    /**
     * Getter for <code>PUBLIC.CUSTOMER.LAST_UPDATE</code>.
     */
    @Column(name = "LAST_UPDATE", nullable = false, precision = 6)
    public OffsetDateTime getLastUpdate() {
        return this.lastUpdate;
    }

    /**
     * Setter for <code>PUBLIC.CUSTOMER.LAST_UPDATE</code>.
     */
    public void setLastUpdate(OffsetDateTime lastUpdate) {
        this.lastUpdate = lastUpdate;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj)
            return true;
        if (obj == null)
            return false;
        if (getClass() != obj.getClass())
            return false;
        final Customer other = (Customer) obj;
        if (this.customerId == null) {
            if (other.customerId != null)
                return false;
        }
        else if (!this.customerId.equals(other.customerId))
            return false;
        if (this.storeId == null) {
            if (other.storeId != null)
                return false;
        }
        else if (!this.storeId.equals(other.storeId))
            return false;
        if (this.firstName == null) {
            if (other.firstName != null)
                return false;
        }
        else if (!this.firstName.equals(other.firstName))
            return false;
        if (this.lastName == null) {
            if (other.lastName != null)
                return false;
        }
        else if (!this.lastName.equals(other.lastName))
            return false;
        if (this.email == null) {
            if (other.email != null)
                return false;
        }
        else if (!this.email.equals(other.email))
            return false;
        if (this.addressId == null) {
            if (other.addressId != null)
                return false;
        }
        else if (!this.addressId.equals(other.addressId))
            return false;
        if (this.active == null) {
            if (other.active != null)
                return false;
        }
        else if (!this.active.equals(other.active))
            return false;
        if (this.createDate == null) {
            if (other.createDate != null)
                return false;
        }
        else if (!this.createDate.equals(other.createDate))
            return false;
        if (this.lastUpdate == null) {
            if (other.lastUpdate != null)
                return false;
        }
        else if (!this.lastUpdate.equals(other.lastUpdate))
            return false;
        return true;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = 1;
        result = prime * result + ((this.customerId == null) ? 0 : this.customerId.hashCode());
        result = prime * result + ((this.storeId == null) ? 0 : this.storeId.hashCode());
        result = prime * result + ((this.firstName == null) ? 0 : this.firstName.hashCode());
        result = prime * result + ((this.lastName == null) ? 0 : this.lastName.hashCode());
        result = prime * result + ((this.email == null) ? 0 : this.email.hashCode());
        result = prime * result + ((this.addressId == null) ? 0 : this.addressId.hashCode());
        result = prime * result + ((this.active == null) ? 0 : this.active.hashCode());
        result = prime * result + ((this.createDate == null) ? 0 : this.createDate.hashCode());
        result = prime * result + ((this.lastUpdate == null) ? 0 : this.lastUpdate.hashCode());
        return result;
    }

    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder("Customer (");

        sb.append(customerId);
        sb.append(", ").append(storeId);
        sb.append(", ").append(firstName);
        sb.append(", ").append(lastName);
        sb.append(", ").append(email);
        sb.append(", ").append(addressId);
        sb.append(", ").append(active);
        sb.append(", ").append(createDate);
        sb.append(", ").append(lastUpdate);

        sb.append(")");
        return sb.toString();
    }
}
