/*
 * This file is generated by jOOQ.
 */
package org.tayrona.sakila.data.tables.records;


import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.Table;
import jakarta.validation.constraints.NotNull;

import java.time.OffsetDateTime;

import org.jooq.Field;
import org.jooq.Record2;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;
import org.tayrona.sakila.data.tables.FilmActor;


/**
 * Film Actor cross-reference table
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
@Entity
@Table(
    name = "FILM_ACTOR",
    schema = "PUBLIC"
)
public class FilmActorRecord extends UpdatableRecordImpl<FilmActorRecord> implements Record3<Long, Long, OffsetDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>PUBLIC.FILM_ACTOR.ACTOR_ID</code>.
     */
    public void setActorId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>PUBLIC.FILM_ACTOR.ACTOR_ID</code>.
     */
    @Column(name = "ACTOR_ID", nullable = false)
    @NotNull
    public Long getActorId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>PUBLIC.FILM_ACTOR.FILM_ID</code>.
     */
    public void setFilmId(Long value) {
        set(1, value);
    }

    /**
     * Getter for <code>PUBLIC.FILM_ACTOR.FILM_ID</code>.
     */
    @Column(name = "FILM_ID", nullable = false)
    @NotNull
    public Long getFilmId() {
        return (Long) get(1);
    }

    /**
     * Setter for <code>PUBLIC.FILM_ACTOR.LAST_UPDATE</code>.
     */
    public void setLastUpdate(OffsetDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>PUBLIC.FILM_ACTOR.LAST_UPDATE</code>.
     */
    @Column(name = "LAST_UPDATE", nullable = false, precision = 6)
    public OffsetDateTime getLastUpdate() {
        return (OffsetDateTime) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record2<Long, Long> key() {
        return (Record2) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Long, OffsetDateTime> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Long, Long, OffsetDateTime> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return FilmActor.FILM_ACTOR.ACTOR_ID;
    }

    @Override
    public Field<Long> field2() {
        return FilmActor.FILM_ACTOR.FILM_ID;
    }

    @Override
    public Field<OffsetDateTime> field3() {
        return FilmActor.FILM_ACTOR.LAST_UPDATE;
    }

    @Override
    public Long component1() {
        return getActorId();
    }

    @Override
    public Long component2() {
        return getFilmId();
    }

    @Override
    public OffsetDateTime component3() {
        return getLastUpdate();
    }

    @Override
    public Long value1() {
        return getActorId();
    }

    @Override
    public Long value2() {
        return getFilmId();
    }

    @Override
    public OffsetDateTime value3() {
        return getLastUpdate();
    }

    @Override
    public FilmActorRecord value1(Long value) {
        setActorId(value);
        return this;
    }

    @Override
    public FilmActorRecord value2(Long value) {
        setFilmId(value);
        return this;
    }

    @Override
    public FilmActorRecord value3(OffsetDateTime value) {
        setLastUpdate(value);
        return this;
    }

    @Override
    public FilmActorRecord values(Long value1, Long value2, OffsetDateTime value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached FilmActorRecord
     */
    public FilmActorRecord() {
        super(FilmActor.FILM_ACTOR);
    }

    /**
     * Create a detached, initialised FilmActorRecord
     */
    public FilmActorRecord(Long actorId, Long filmId, OffsetDateTime lastUpdate) {
        super(FilmActor.FILM_ACTOR);

        setActorId(actorId);
        setFilmId(filmId);
        setLastUpdate(lastUpdate);
    }

    /**
     * Create a detached, initialised FilmActorRecord
     */
    public FilmActorRecord(org.tayrona.sakila.data.tables.pojos.FilmActor value) {
        super(FilmActor.FILM_ACTOR);

        if (value != null) {
            setActorId(value.getActorId());
            setFilmId(value.getFilmId());
            setLastUpdate(value.getLastUpdate());
        }
    }
}
